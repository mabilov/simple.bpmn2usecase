
partial class ChoiceStepImpl {

@members <--

	public String export() {
		StringBuffer sb = new StringBuffer();
		sb.append(" choice step ");
		sb.append(this.getId());
		String comma = "";

		java.util.Iterator<StepAlternative> altFlows = this.getStepAlternatives().stream()
				.sorted(new java.util.Comparator<StepAlternative>() {
					@Override
					public int compare(StepAlternative o1, StepAlternative o2) {
						return o1.getCondition().compareTo(o2.getCondition());
					}
				}).iterator();
		while (altFlows.hasNext()) {
			StepAlternative alt = altFlows.next();
			sb.append(comma);
			sb.append("if " + alt.getCondition() + " then alternative flow " + alt.getRef().getId());
			comma = ", ";
		}
		
		if (this.getNext() != null) {
			sb.append(" next ");
			sb.append(this.getNext().getId());
		}
		
		return sb.toString();
	}
	
-->

}