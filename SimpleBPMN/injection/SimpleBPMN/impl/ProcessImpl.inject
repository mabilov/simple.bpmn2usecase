
partial class ProcessImpl {

@members <--

	public String export() {
		StringBuffer sb = new StringBuffer();
		sb.append("process ");
		sb.append(this.getId());
		SimpleBPMN.FlowNode se = this.findFirst();
		sb.append(se.export());
		return sb.toString();
	}

	public SimpleBPMN.FlowNode findFirst() {
		java.util.Optional<FlowElement> el = this.getFlowElements().stream().filter(fe -> fe instanceof SimpleBPMN.StartEvent)
				.findAny();
		if (el.isPresent())
			return (SimpleBPMN.FlowNode) el.get();

		el = this.getFlowElements().stream()
				.filter(fe -> fe instanceof SimpleBPMN.FlowNode && (((SimpleBPMN.FlowNode) fe).getIncoming() == null
						|| ((SimpleBPMN.FlowNode) fe).getIncoming().isEmpty()))
				.findAny();
		if (el.isPresent())
			return (SimpleBPMN.FlowNode) el.get();

		return null;
	}
	
-->

}